services:
  db:
    image: postgres
    container_name: db_1
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    depends_on:
      db:
        condition: service_healthy
    build: ./backend
    image: api_image
    container_name: api_1
    command: bash -c "npm start"
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/data/app
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      SECRET_KEY: "${SECRET_KEY}"

  frontend:
    build: ./frontend
    image: frontend_image
    container_name: frontend_1
    command: bash -c "npm start"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/data/app
